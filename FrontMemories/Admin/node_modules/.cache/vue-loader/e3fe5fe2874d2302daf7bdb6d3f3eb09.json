{"remainingRequest":"/Users/raphaelb/Documents/Projects/KOFCORP/ROAD-MEMORY/FrontMemories/Partners/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raphaelb/Documents/Projects/KOFCORP/ROAD-MEMORY/FrontMemories/Partners/src/components/PaperTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raphaelb/Documents/Projects/KOFCORP/ROAD-MEMORY/FrontMemories/Partners/src/components/PaperTable.vue","mtime":1677103856721},{"path":"/Users/raphaelb/Documents/Projects/KOFCORP/ROAD-MEMORY/FrontMemories/Partners/node_modules/cache-loader/dist/cjs.js","mtime":1676921331329},{"path":"/Users/raphaelb/Documents/Projects/KOFCORP/ROAD-MEMORY/FrontMemories/Partners/node_modules/babel-loader/lib/index.js","mtime":1676921333256},{"path":"/Users/raphaelb/Documents/Projects/KOFCORP/ROAD-MEMORY/FrontMemories/Partners/node_modules/cache-loader/dist/cjs.js","mtime":1676921331329},{"path":"/Users/raphaelb/Documents/Projects/KOFCORP/ROAD-MEMORY/FrontMemories/Partners/node_modules/vue-loader/lib/index.js","mtime":1676921334552}],"contextDependencies":[],"result":["\nimport Tour from \"../services/tour-request.js\";\nexport default {\n  name: \"paper-table\",\n  props: {\n    columns: Array,\n    data: Array,\n    type: {\n      type: String, // striped | hover\n      default: \"striped\",\n    },\n    title: {\n      type: String,\n      default: \"\",\n    },\n    subTitle: {\n      type: String,\n      default: \"\",\n    },\n  },\n  computed: {\n    tableClass() {\n      return `table-${this.type}`;\n    },\n  },\n  methods: {\n    hasValue(item, column) {\n      return item[column.toLowerCase()] !== \"undefined\";\n    },\n    itemValue(item, column) {\n      return item[column.toLowerCase()];\n    },\n    deleteService(identifier, site) {\n      // if (site == \"tour\") {\n      //   identifier;\n      //   const swalWithBootstrapButtons = this.$swal.mixin({\n      //     customClass: {\n      //       confirmButton: \"btn btn-success\",\n      //       cancelButton: \"btn btn-danger\",\n      //     },\n      //     buttonsStyling: false,\n      //   });\n\n      //   swalWithBootstrapButtons\n      //     .fire({\n      //       title: \"Êtes vous sûres ?\",\n      //       text: \"Cet action sera irreversible!\",\n      //       icon: \"warning\",\n      //       showCancelButton: true,\n      //       confirmButtonText: \"OUI, Supprimer!\",\n      //       cancelButtonText: \"Non, Annuler!\",\n      //       reverseButtons: true,\n      //     })\n      //     .then((result) => {\n      //       if (result.isConfirmed) {\n      //         Tour.deleteTour(identifier)\n      //           .then((response) => {\n      //             swalWithBootstrapButtons.fire(\n      //               \"Supprimé!\",\n      //               \"Ce site a été suprimé.\",\n      //               \"success\"\n      //             );\n      //             location.reload();\n      //           })\n      //           .catch((error) => {\n      //             swalWithBootstrapButtons.fire(\n      //               \"Desolé !\",\n      //               \"Une erreur s'est produite\",\n      //               \"Verifiez votre connexion et réessayez .\"\n      //             );\n      //           });\n      //       } else {\n      //         swalWithBootstrapButtons.fire(\n      //           \"Annulé !\",\n      //           \"Vos données sont toujours disponible\"\n      //         );\n      //       }\n      //     });\n      // }\n      // if (site == \"hotel\") {\n      //   identifier;\n      //   const swalWithBootstrapButtons = this.$swal.mixin({\n      //     customClass: {\n      //       confirmButton: \"btn btn-success\",\n      //       cancelButton: \"btn btn-danger\",\n      //     },\n      //     buttonsStyling: false,\n      //   });\n\n      //   swalWithBootstrapButtons\n      //     .fire({\n      //       title: \"Êtes vous sûres ?\",\n      //       text: \"Cet action sera irreversible!\",\n      //       icon: \"warning\",\n      //       showCancelButton: true,\n      //       confirmButtonText: \"OUI, Supprimer!\",\n      //       cancelButtonText: \"Non, Annuler!\",\n      //       reverseButtons: true,\n      //     })\n      //     .then((result) => {\n      //       if (result.isConfirmed) {\n      //         Hotel.deleteHotel(identifier)\n      //           .then((response) => {\n      //             swalWithBootstrapButtons.fire(\n      //               \"Supprimé!\",\n      //               \"Cet hotel a été suprimé.\",\n      //               \"success\"\n      //             );\n      //             location.reload();\n      //           })\n      //           .catch((error) => {\n      //             swalWithBootstrapButtons.fire(\n      //               \"Desolé !\",\n      //               \"Une erreur s'est produite\",\n      //               \"Verifiez votre connexion et réessayez .\"\n      //             );\n      //           });\n      //       } else {\n      //         swalWithBootstrapButtons.fire(\n      //           \"Annulé !\",\n      //           \"Vos données sont toujours disponible\"\n      //         );\n      //       }\n      //     });\n      // }\n    },\n    editService(service, site) {\n      sessionStorage.setItem(\"tourToEdit\", service);\n      sessionStorage.setItem(\"hotelToEdit\", service);\n      sessionStorage.setItem(\"carToEdit\", service);\n      sessionStorage.setItem(\"restoToEdit\", service);\n      this.$router.push(`/edit-service/${service}/${site}`);\n    },\n  },\n};\n",{"version":3,"sources":["PaperTable.vue"],"names":[],"mappings":";AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PaperTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div>\n      <h2>{{ title }}</h2>\n      <table class=\"table\" :class=\"tableClass\">\n        <thead>\n          <slot name=\"columns\">\n            <th v-for=\"column in columns\" :key=\"column\">{{ column }}</th>\n            <th>Image</th>\n            <th>Action</th>\n          </slot>\n        </thead>\n        <tbody>\n          <tr v-for=\"(item, index) in data\" :key=\"index\">\n            <slot :row=\"item\">\n              <td v-for=\"(column, index) in columns\" :key=\"index\">\n                {{ itemValue(item, column) }}\n              </td>\n              <td>\n                <!-- <span>\n                   src=\"https:mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(121).webp\"\n              </span> -->\n                <img\n                  :src=\"'http://localhost:8000/' + item.image\"\n                  alt=\"\"\n                  width=\"70px\"\n                />\n              </td>\n              <td>\n                <button\n                  class=\"ti-eye btn btn-info\"\n                  @click=\"editService(item.idBD, item.site)\"\n                ></button>\n                <button\n                  class=\"ti-trash btn btn-danger\"\n                  @click=\"deleteService(item.idBD, item.site)\"\n                >\n                  <!-- <drop-down class=\"nav-item\" icon=\"ti-bell\">\n                    <a class=\"dropdown-item\" href=\"#\" style=\"z-index: 100\"\n                      >Notification 1</a\n                    >\n                  </drop-down> -->\n                </button>\n              </td>\n            </slot>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n<script>\nimport Tour from \"../services/tour-request.js\";\nexport default {\n  name: \"paper-table\",\n  props: {\n    columns: Array,\n    data: Array,\n    type: {\n      type: String, // striped | hover\n      default: \"striped\",\n    },\n    title: {\n      type: String,\n      default: \"\",\n    },\n    subTitle: {\n      type: String,\n      default: \"\",\n    },\n  },\n  computed: {\n    tableClass() {\n      return `table-${this.type}`;\n    },\n  },\n  methods: {\n    hasValue(item, column) {\n      return item[column.toLowerCase()] !== \"undefined\";\n    },\n    itemValue(item, column) {\n      return item[column.toLowerCase()];\n    },\n    deleteService(identifier, site) {\n      // if (site == \"tour\") {\n      //   identifier;\n      //   const swalWithBootstrapButtons = this.$swal.mixin({\n      //     customClass: {\n      //       confirmButton: \"btn btn-success\",\n      //       cancelButton: \"btn btn-danger\",\n      //     },\n      //     buttonsStyling: false,\n      //   });\n\n      //   swalWithBootstrapButtons\n      //     .fire({\n      //       title: \"Êtes vous sûres ?\",\n      //       text: \"Cet action sera irreversible!\",\n      //       icon: \"warning\",\n      //       showCancelButton: true,\n      //       confirmButtonText: \"OUI, Supprimer!\",\n      //       cancelButtonText: \"Non, Annuler!\",\n      //       reverseButtons: true,\n      //     })\n      //     .then((result) => {\n      //       if (result.isConfirmed) {\n      //         Tour.deleteTour(identifier)\n      //           .then((response) => {\n      //             swalWithBootstrapButtons.fire(\n      //               \"Supprimé!\",\n      //               \"Ce site a été suprimé.\",\n      //               \"success\"\n      //             );\n      //             location.reload();\n      //           })\n      //           .catch((error) => {\n      //             swalWithBootstrapButtons.fire(\n      //               \"Desolé !\",\n      //               \"Une erreur s'est produite\",\n      //               \"Verifiez votre connexion et réessayez .\"\n      //             );\n      //           });\n      //       } else {\n      //         swalWithBootstrapButtons.fire(\n      //           \"Annulé !\",\n      //           \"Vos données sont toujours disponible\"\n      //         );\n      //       }\n      //     });\n      // }\n      // if (site == \"hotel\") {\n      //   identifier;\n      //   const swalWithBootstrapButtons = this.$swal.mixin({\n      //     customClass: {\n      //       confirmButton: \"btn btn-success\",\n      //       cancelButton: \"btn btn-danger\",\n      //     },\n      //     buttonsStyling: false,\n      //   });\n\n      //   swalWithBootstrapButtons\n      //     .fire({\n      //       title: \"Êtes vous sûres ?\",\n      //       text: \"Cet action sera irreversible!\",\n      //       icon: \"warning\",\n      //       showCancelButton: true,\n      //       confirmButtonText: \"OUI, Supprimer!\",\n      //       cancelButtonText: \"Non, Annuler!\",\n      //       reverseButtons: true,\n      //     })\n      //     .then((result) => {\n      //       if (result.isConfirmed) {\n      //         Hotel.deleteHotel(identifier)\n      //           .then((response) => {\n      //             swalWithBootstrapButtons.fire(\n      //               \"Supprimé!\",\n      //               \"Cet hotel a été suprimé.\",\n      //               \"success\"\n      //             );\n      //             location.reload();\n      //           })\n      //           .catch((error) => {\n      //             swalWithBootstrapButtons.fire(\n      //               \"Desolé !\",\n      //               \"Une erreur s'est produite\",\n      //               \"Verifiez votre connexion et réessayez .\"\n      //             );\n      //           });\n      //       } else {\n      //         swalWithBootstrapButtons.fire(\n      //           \"Annulé !\",\n      //           \"Vos données sont toujours disponible\"\n      //         );\n      //       }\n      //     });\n      // }\n    },\n    editService(service, site) {\n      sessionStorage.setItem(\"tourToEdit\", service);\n      sessionStorage.setItem(\"hotelToEdit\", service);\n      sessionStorage.setItem(\"carToEdit\", service);\n      sessionStorage.setItem(\"restoToEdit\", service);\n      this.$router.push(`/edit-service/${service}/${site}`);\n    },\n  },\n};\n</script>\n<style></style>\n"]}]}